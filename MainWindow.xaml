<Window x:Class="CSharpWpfShazam.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:ui="http://schemas.modernwpf.com/2019"        
        xmlns:local="clr-namespace:CSharpWpfShazam"
        mc:Ignorable="d"        
        Icon="CSharpWpfShazam.ico"
        WindowStartupLocation="CenterScreen"
        Title="{Binding AppTitle}" Height="1000" Width="1650" MinHeight="300" MinWidth="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
    </Window.Resources>

    <Grid Background="#EDEDED">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="70" />
            <RowDefinition Height="*" MinHeight="230" />
        </Grid.RowDefinitions>

        <!--Top app bar area-->
        <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Black" 
                IsEnabled="{Binding IsCommandNotBusy}" >
            <DockPanel Background="{StaticResource ShazamThemeBrush}">
                <ui:SimpleStackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                    <TextBlock Text="C# WPF Shazam - Identify songs like the popular mobile app Shazam and save song info in MySQL database" FontSize="20" FontWeight="SemiBold" Background="Transparent"
                                HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" />
                </ui:SimpleStackPanel>
            </DockPanel>
        </Border>

        <!--Listen to device or Cancel / status row-->
        <Border Grid.Row="1" Grid.ColumnSpan="2" Background="LightGray" BorderThickness="0,0,0,3" BorderBrush="{StaticResource ShazamThemeBrush}" >
            <Grid Margin="0,15,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="{Binding ListenButtonText}" Command="{Binding ListenOrCancelCommand}" 
                            IsEnabled="{Binding IsListenButonEnabled}" ToolTip="Listen to a selected device" 
                            Style="{StaticResource ShazamButtonStyle}" FontSize="22" Margin="15,0,0,0" />
                <ComboBox Grid.Column="1" IsEnabled="{Binding IsCommandNotBusy}" Height="35"
                            ItemsSource="{Binding DeviceSettingList}" SelectedItem="{Binding SelectedDeviceSetting}"                            
                            ToolTip="Hint: select a device with 'speaker' or 'microphone'"  Margin="15,2,0,5" />
                <ui:AppBarButton Grid.Column="2" Icon="Refresh" ToolTip="Reload device list" 
                                 Command="{Binding ReloadDeviceListCommand}" IsEnabled="{Binding IsCommandNotBusy}"
                                 Width="40" Height="40" FontWeight="SemiBold" Margin="5,0,0,0"/>
                <!--StatusMessage-->
                <StackPanel Grid.Column="3" Orientation="Horizontal">
                    <Border BorderBrush="Gray" BorderThickness="1,0,0,0" Margin="5,5,0,20" />
                    <TextBlock Text="{Binding StatusMessage}" ToolTip="{Binding StatusMessage}" 
                               FontSize="18" FontWeight="SemiBold" Margin="15,8,0,20">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsErrorStatusMessage}" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <ui:ProgressRing Grid.Column="4" Visibility="{Binding IsProgressOn, Converter={StaticResource VisibleIfTrueConverter}}" 
                                    IsActive="{Binding IsProgressOn}" Height="15" Width="15" Margin="15,10,0,20" />
            </Grid>
        </Border>

        <!--Tab control and song info section-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="400" />
                <!--Must be Auto and no MinWidth for Expand/Collapse button to work-->
                <ColumnDefinition Width="Auto" />
                <!--Expander-->
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>

            <!--Tab control-->
            <TabControl x:Name="TabControlName" Grid.Column="0" Background="LightGray">
                <TabItem x:Name="ShazamTabItem" BorderThickness="1,1,1,0" BorderBrush="Gray">
                    <TabItem.Header>
                        <TextBlock Text="Shazam" Margin="6,2" />
                    </TabItem.Header>
                    <local:ShazamUserControl DataContext="{Binding .}" />
                </TabItem>
                <TabItem x:Name="MySQLTabItem" BorderThickness="1,1,1,0" BorderBrush="Gray">
                    <TabItem.Header>
                        <TextBlock Text="MySQL" Margin="6,2" />
                    </TabItem.Header>
                    <local:MySQLUserControl DataContext="{Binding .}" />
                </TabItem>
            </TabControl>

            <!--Song info (MaxWidth below is the actual width because of SongInfoSectionVisibility)-->
            <Border Grid.Column="1" Visibility="{Binding SongInfoSectionVisibility}" 
                    BorderThickness="3,0,0,0" BorderBrush="{StaticResource ShazamThemeBrush}" >
                <Grid MaxWidth="360" Background="#EDEDED">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="115"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Image Visibility="{Binding SongCoverVisibility}" Source="{Binding SongCoverUrl, TargetNullValue={x:Null}}"                                             
                        MaxHeight="100" VerticalAlignment="Top" Margin="10,7,0,0" />
                    <TextBlock Grid.Column="1" Text="{Binding SongInfoText}" TextWrapping="Wrap" Foreground="Navy" 
                        FontSize="18" FontWeight="SemiBold" Padding="0,5,0,2" Margin="10,0" />
                    <DockPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="3,5,3,0">
                        <Label Content="Lyrics" Foreground="Navy" FontSize="20" FontWeight="SemiBold" Margin="10,3,0,0" />
                        <ui:AppBarButton Icon="Copy" HorizontalAlignment="Left" ToolTip="Copy song info to clipboard" Width="30"
                                 Command="{Binding CopySongInfoCommand}" Margin="5,-2,0,0" />
                    </DockPanel>
                    <Border Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="0,1,0,0" BorderBrush="Black" Margin="8,5,5,5">
                        <ScrollViewer>
                            <TextBlock Text="{Binding SongLyrics}" VerticalAlignment="Top" 
                               FontSize="18" FontWeight="SemiBold" TextWrapping="Wrap" Padding="1" Margin="5" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Border>

            <!--Expand/Collapse button on right side for song info Pane (2023-10-20: can't have GridSplitter with this)-->
            <Grid Grid.Column="2" Background="LightGray">
                <Button BorderBrush="LightGray" BorderThickness="1,0,0,0"
                        Command="{Binding ExpandOrCollapseSongInfoSectionCommand}" ToolTip="Expand / Collapse song info pane"
                        Height="50" Background="Transparent" Margin="5,0,0,0">
                    <Button.Resources>
                        <Polygon x:Key="PolygonRight" Points="0,0,0,40,10,20" Fill="#1e70ca" Margin="0,0,3,0" />
                        <Polygon x:Key="PolygonLeft" Points="10,0,10,40,0,20" Fill="#1e70ca" Margin="0,0,3,0"/>
                        <SolidColorBrush x:Key="MouseOverBackground" Color="Red"/>
                    </Button.Resources>
                    <Button.Style >
                        <Style TargetType="{x:Type Button}">
                            <!--Make background transparent (TemplateBinding). See comments on Button style in app.xaml.-->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.4" ScaleY="1.4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <DataTrigger Binding="{Binding SongInfoSectionVisibility}" Value="Visible">
                                    <Setter Property="Content" Value="{StaticResource PolygonRight}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SongInfoSectionVisibility}" Value="Collapsed">
                                    <Setter Property="Content" Value="{StaticResource PolygonLeft}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

        </Grid>
    </Grid>
</Window>
